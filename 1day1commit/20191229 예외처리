오류 발생)
자주 발생하는 오류
1. 디렉터리 안에 없는 파일을 열려고 했을 때
-FileNotFoundError 발생
2. 0으로 다른 숫자를 나눌 경우
- ZeroDivisionError 발생
3. 리스트에 없는 값을 찾을 때
-IndexError 발생

오류 예외 처리 기법)
try, except문
구조-
try:
    ...
except [발생 오류[as 오류 메시지 변수]]:
    ...

try 블록 수행 중 오류가 발생하면 except 블록 수행

except구문의 방법
1. try, except 만 사용 = 오류 종류와 상관 없이 오류가 발생하면 except 블록을 수행
try:
    ...
except:
    ...
2. 발생 오류만 포함한 except문 = except문에 미리 정해 놓은 오류 이름과 일치할 때만 except블록을 수행
try:
    ...
except 발생 오류:
    ...
3. 발생 오류와 오류 메시지 변수까지 포함한 except문= 2번째 경우에서 오류 메세지의 내용까지 알고 싶을 때 사용
try:
    ...
except 발생 오류 as 오류 메시지 변수:
    ...

try .. finally문
- finally절은 사용한 리소스를 close해야 할 때에 많이 사용, 예외 발생 여부에 상관없이 항상 수행
ex)
f = open('foo.txt', 'w')
try:
    # 무언가를 수행한다.
finally:
    f.close()

여러개의 오류 처리)
try:
    ...
except 발생 오류1:
   ... 
except 발생 오류2:
   ...
ex)
try:
    a = [1,2]
    print(a[3])
    4/0
except ZeroDivisionError as e:
    print(e)
except IndexError as e:
    print(e)

오류 회피) 
ex)
try:
    f = open("나없는파일", 'r')
except FileNotFoundError:
    pass
-FileNotFoundError가 발생할 경우에 pass를 사용

